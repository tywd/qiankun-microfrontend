import{_ as a,c as n,o as l,ag as i}from"./chunks/framework.DuUc6cOo.js";const b=JSON.parse('{"title":"项目介绍","description":"","frontmatter":{},"headers":[],"relativePath":"guide/index.md","filePath":"guide/index.md","lastUpdated":1756290117000}'),e={name:"guide/index.md"};function r(t,s,p,o,h,d){return l(),n("div",null,[...s[0]||(s[0]=[i(`<h1 id="项目介绍" tabindex="-1">项目介绍 <a class="header-anchor" href="#项目介绍" aria-label="Permalink to &quot;项目介绍&quot;">​</a></h1><h2 id="🎯-项目概述" tabindex="-1">🎯 项目概述 <a class="header-anchor" href="#🎯-项目概述" aria-label="Permalink to &quot;🎯 项目概述&quot;">​</a></h2><p>企业级微前端管理后台系统是一个基于现代化技术栈构建的完整解决方案，专为解决大型企业应用的复杂性和可维护性问题而设计。</p><h3 id="🏗️-项目背景" tabindex="-1">🏗️ 项目背景 <a class="header-anchor" href="#🏗️-项目背景" aria-label="Permalink to &quot;🏗️ 项目背景&quot;">​</a></h3><p>传统的单体应用在企业级项目中面临诸多挑战：</p><ul><li><strong>团队协作困难</strong>：多团队开发容易产生冲突</li><li><strong>技术栈固化</strong>：难以引入新技术和框架</li><li><strong>部署复杂性</strong>：整体部署风险高，回滚困难</li><li><strong>维护成本高</strong>：代码耦合度高，修改影响面大</li></ul><p>微前端架构通过将大型应用拆分为多个独立的子应用，有效解决了这些问题。</p><h2 id="🔧-技术架构" tabindex="-1">🔧 技术架构 <a class="header-anchor" href="#🔧-技术架构" aria-label="Permalink to &quot;🔧 技术架构&quot;">​</a></h2><h3 id="核心技术栈" tabindex="-1">核心技术栈 <a class="header-anchor" href="#核心技术栈" aria-label="Permalink to &quot;核心技术栈&quot;">​</a></h3><table tabindex="0"><thead><tr><th>技术</th><th>版本</th><th>用途</th></tr></thead><tbody><tr><td>Vue 3</td><td>3.x</td><td>前端框架</td></tr><tr><td>TypeScript</td><td>5.x</td><td>类型系统</td></tr><tr><td>Vite</td><td>7.x</td><td>构建工具</td></tr><tr><td>Qiankun</td><td>2.x</td><td>微前端框架</td></tr><tr><td>Element Plus</td><td>2.x</td><td>UI组件库</td></tr><tr><td>Vue Router</td><td>4.x</td><td>路由管理</td></tr><tr><td>pnpm</td><td>8.x</td><td>包管理器</td></tr></tbody></table><h3 id="架构设计" tabindex="-1">架构设计 <a class="header-anchor" href="#架构设计" aria-label="Permalink to &quot;架构设计&quot;">​</a></h3><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph TB</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[主应用 - 壳应用] --&gt; B[用户管理子应用]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A --&gt; C[系统管理子应用]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A --&gt; D[其他子应用...]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    E[共享资源] --&gt; A</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    E --&gt; B</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    E --&gt; C</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    F[路由管理] --&gt; A</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    G[状态管理] --&gt; A</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    H[权限控制] --&gt; A</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="应用间通信" tabindex="-1">应用间通信 <a class="header-anchor" href="#应用间通信" aria-label="Permalink to &quot;应用间通信&quot;">​</a></h3><ol><li><strong>Props传递</strong>：主应用向子应用传递配置信息</li><li><strong>事件总线</strong>：跨应用的事件通信机制</li><li><strong>共享状态</strong>：全局状态管理</li><li><strong>路由通信</strong>：跨应用的路由跳转</li></ol><h2 id="📊-项目结构" tabindex="-1">📊 项目结构 <a class="header-anchor" href="#📊-项目结构" aria-label="Permalink to &quot;📊 项目结构&quot;">​</a></h2><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>enterprise-microfrontend/</span></span>
<span class="line"><span>├── main-app/                    # 主应用（壳应用）</span></span>
<span class="line"><span>│   ├── src/</span></span>
<span class="line"><span>│   │   ├── components/         # 公共组件</span></span>
<span class="line"><span>│   │   ├── micro/             # 微前端配置</span></span>
<span class="line"><span>│   │   ├── router/            # 路由配置</span></span>
<span class="line"><span>│   │   ├── shared/            # 共享模块</span></span>
<span class="line"><span>│   │   ├── views/             # 页面组件</span></span>
<span class="line"><span>│   │   └── main.ts            # 入口文件</span></span>
<span class="line"><span>│   ├── vite.config.ts         # Vite配置</span></span>
<span class="line"><span>│   └── package.json</span></span>
<span class="line"><span>├── sub-apps/                   # 子应用目录</span></span>
<span class="line"><span>│   ├── user-management/        # 用户管理子应用</span></span>
<span class="line"><span>│   │   ├── src/</span></span>
<span class="line"><span>│   │   ├── vite.config.ts</span></span>
<span class="line"><span>│   │   └── package.json</span></span>
<span class="line"><span>│   └── system-management/      # 系统管理子应用</span></span>
<span class="line"><span>│       ├── src/</span></span>
<span class="line"><span>│       ├── vite.config.ts</span></span>
<span class="line"><span>│       └── package.json</span></span>
<span class="line"><span>├── docs/                       # 项目文档</span></span>
<span class="line"><span>├── docs-site/                  # VitePress文档站点</span></span>
<span class="line"><span>├── scripts/                    # 部署脚本</span></span>
<span class="line"><span>├── docker/                     # Docker配置</span></span>
<span class="line"><span>├── nginx/                      # Nginx配置</span></span>
<span class="line"><span>├── .github/workflows/          # GitHub Actions</span></span>
<span class="line"><span>└── package.json               # 根package.json</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="🎨-功能特性" tabindex="-1">🎨 功能特性 <a class="header-anchor" href="#🎨-功能特性" aria-label="Permalink to &quot;🎨 功能特性&quot;">​</a></h2><h3 id="主应用功能" tabindex="-1">主应用功能 <a class="header-anchor" href="#主应用功能" aria-label="Permalink to &quot;主应用功能&quot;">​</a></h3><ul><li><strong>应用壳</strong>：提供统一的应用框架和布局</li><li><strong>路由管理</strong>：协调主子应用的路由系统</li><li><strong>子应用注册</strong>：动态注册和加载子应用</li><li><strong>公共组件</strong>：头部导航、侧边栏、面包屑等</li><li><strong>权限控制</strong>：统一的权限管理和路由守卫</li></ul><h3 id="子应用功能" tabindex="-1">子应用功能 <a class="header-anchor" href="#子应用功能" aria-label="Permalink to &quot;子应用功能&quot;">​</a></h3><h4 id="用户管理子应用" tabindex="-1">用户管理子应用 <a class="header-anchor" href="#用户管理子应用" aria-label="Permalink to &quot;用户管理子应用&quot;">​</a></h4><ul><li>用户列表展示和分页</li><li>用户信息的增删改查</li><li>用户权限管理</li><li>批量操作功能</li></ul><h4 id="系统管理子应用" tabindex="-1">系统管理子应用 <a class="header-anchor" href="#系统管理子应用" aria-label="Permalink to &quot;系统管理子应用&quot;">​</a></h4><ul><li>系统配置管理</li><li>菜单权限配置</li><li>操作日志查看</li><li>系统监控面板</li></ul><h2 id="🔐-权限系统" tabindex="-1">🔐 权限系统 <a class="header-anchor" href="#🔐-权限系统" aria-label="Permalink to &quot;🔐 权限系统&quot;">​</a></h2><h3 id="权限设计" tabindex="-1">权限设计 <a class="header-anchor" href="#权限设计" aria-label="Permalink to &quot;权限设计&quot;">​</a></h3><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph LR</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[用户] --&gt; B[角色]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; C[权限]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; D[菜单权限]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; E[操作权限]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; F[数据权限]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="权限控制" tabindex="-1">权限控制 <a class="header-anchor" href="#权限控制" aria-label="Permalink to &quot;权限控制&quot;">​</a></h3><ol><li><strong>路由权限</strong>：基于角色的路由访问控制</li><li><strong>菜单权限</strong>：动态菜单生成和权限过滤</li><li><strong>按钮权限</strong>：页面内按钮级别的权限控制</li><li><strong>数据权限</strong>：基于角色的数据访问控制</li></ol><h2 id="🌟-核心优势" tabindex="-1">🌟 核心优势 <a class="header-anchor" href="#🌟-核心优势" aria-label="Permalink to &quot;🌟 核心优势&quot;">​</a></h2><h3 id="开发优势" tabindex="-1">开发优势 <a class="header-anchor" href="#开发优势" aria-label="Permalink to &quot;开发优势&quot;">​</a></h3><ul><li><strong>独立开发</strong>：各子应用可独立开发、测试、部署</li><li><strong>技术栈自由</strong>：子应用可选择不同的技术栈</li><li><strong>代码隔离</strong>：避免代码冲突和相互影响</li><li><strong>团队协作</strong>：支持多团队并行开发</li></ul><h3 id="部署优势" tabindex="-1">部署优势 <a class="header-anchor" href="#部署优势" aria-label="Permalink to &quot;部署优势&quot;">​</a></h3><ul><li><strong>独立部署</strong>：子应用可单独部署更新</li><li><strong>灰度发布</strong>：支持子应用的灰度发布</li><li><strong>回滚简单</strong>：出现问题可快速回滚</li><li><strong>资源优化</strong>：按需加载和共享资源</li></ul><h3 id="维护优势" tabindex="-1">维护优势 <a class="header-anchor" href="#维护优势" aria-label="Permalink to &quot;维护优势&quot;">​</a></h3><ul><li><strong>职责清晰</strong>：模块边界明确，便于维护</li><li><strong>影响范围小</strong>：修改影响范围可控</li><li><strong>技术升级</strong>：可渐进式技术栈升级</li><li><strong>性能优化</strong>：独立的性能优化空间</li></ul><h2 id="📈-性能优化" tabindex="-1">📈 性能优化 <a class="header-anchor" href="#📈-性能优化" aria-label="Permalink to &quot;📈 性能优化&quot;">​</a></h2><h3 id="加载优化" tabindex="-1">加载优化 <a class="header-anchor" href="#加载优化" aria-label="Permalink to &quot;加载优化&quot;">​</a></h3><ul><li><strong>懒加载</strong>：子应用按需加载</li><li><strong>预加载</strong>：智能预加载策略</li><li><strong>缓存策略</strong>：合理的缓存配置</li><li><strong>CDN加速</strong>：静态资源CDN分发</li></ul><h3 id="运行优化" tabindex="-1">运行优化 <a class="header-anchor" href="#运行优化" aria-label="Permalink to &quot;运行优化&quot;">​</a></h3><ul><li><strong>代码分割</strong>：合理的代码分割策略</li><li><strong>共享依赖</strong>：避免重复加载相同依赖</li><li><strong>内存管理</strong>：子应用卸载时的内存清理</li><li><strong>样式隔离</strong>：避免样式冲突和污染</li></ul><h2 id="🎯-适用场景" tabindex="-1">🎯 适用场景 <a class="header-anchor" href="#🎯-适用场景" aria-label="Permalink to &quot;🎯 适用场景&quot;">​</a></h2><h3 id="理想场景" tabindex="-1">理想场景 <a class="header-anchor" href="#理想场景" aria-label="Permalink to &quot;理想场景&quot;">​</a></h3><ul><li><strong>大型企业应用</strong>：功能模块众多，需要模块化管理</li><li><strong>多团队开发</strong>：不同团队负责不同业务模块</li><li><strong>技术栈迁移</strong>：需要渐进式技术栈升级</li><li><strong>业务快速迭代</strong>：需要频繁发布和独立部署</li></ul><h3 id="考虑因素" tabindex="-1">考虑因素 <a class="header-anchor" href="#考虑因素" aria-label="Permalink to &quot;考虑因素&quot;">​</a></h3><ul><li><strong>项目复杂度</strong>：简单项目可能不需要微前端</li><li><strong>团队规模</strong>：小团队可能管理成本较高</li><li><strong>技术能力</strong>：需要团队具备相应的技术能力</li><li><strong>基础设施</strong>：需要完善的基础设施支持</li></ul><hr><p>通过合理的架构设计和技术选型，本项目为企业级应用开发提供了一个完整、可扩展的解决方案。</p>`,48)])])}const u=a(e,[["render",r]]);export{b as __pageData,u as default};
